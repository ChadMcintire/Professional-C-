Q. How do I avoid circular includes?
   1. You can use either #ifndef MYHEADER_H
                         #define MYHEADER_H
                         //body
                         #endif
   2. You could #pragma once
                //body

Q. What do argc, and argv[]?
   1. argc gives the number of arguments passed to the program, and argv
   contains the. Actual parameters start at argument one or argv[1].

Q. Why shouldn't I use printf and scanf?
   1. printf() and scanf() family of functions do not provide any type safety.

Q. What are some nested name space examples in C++17?
   1. namespace MyLibraries::Networking::FTP {
    /* â€¦ */
    }

    MyLibraries, Networking, and FTP are all namespaces.

Q.  How can we alias a namespace?
    1. namespace MyFTP = MyLibraries::Networking::FTP;

Q.  What is the type of enum i should use?
    1. You should use the type-safe enum.

Q. What does a pointer represent?
   1. points at the dynamically allocated heap memory, variable on the stack, 
   or another pointer.

Q. What is a null pointer.
   1. A null pointer is a special default that no valid pointer will ever have.
   and converts to false when used in Boolean expressions

Q. What steps should I take in deleting memory?
   1. delete the memory, then set the location to nullptr

Q. What are some uses of const?
   1. Making a variable const so that its value cannot be changed by someone else.

Q. How should objects be passed to functions?
   1. Prefer to pass it by const reference instead of value, pass by non-const 
   reference if the function needs to modify the object.

Q. What side effects does auto have?
   1. auto strips away const and ref so if you want auto const and ref store it
   like this: const auto& f2 = foo();

Q. What is another way to deduce type?
   1. Using decltype, which keeps the const and ref, ex.: 
   decltype(foo()) f2 = foo();
